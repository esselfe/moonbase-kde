Patch status: limbo, not really upstreamable as-is

musl uses different syscalls than glibc and sandbox needs adjusting.
Note most issues with this can be picked up by the test suite.

Patch formerly taken from Alpine with __GLIBC__ added, then adjusted
as needed over time.

https://crbug.com/1380656 (musl tracking bug)
--- a/src/3rdparty/chromium/sandbox/linux/seccomp-bpf-helpers/syscall_parameters_restrictions.cc
+++ b/src/3rdparty/chromium/sandbox/linux/seccomp-bpf-helpers/syscall_parameters_restrictions.cc
@@ -133,4 +133,5 @@
   const Arg<unsigned long> flags(0);
 
+#if defined(__GLIBC__)
   // TODO(mdempsky): Extend DSL to support (flags & ~mask1) == mask2.
   const uint64_t kAndroidCloneMask = CLONE_VM | CLONE_FS | CLONE_FILES |
@@ -147,4 +148,11 @@
       AnyOf(flags == kAndroidCloneMask, flags == kObsoleteAndroidCloneMask,
             flags == kGlibcPthreadFlags);
+#else
+  const int required = CLONE_VM | CLONE_FS | CLONE_FILES | CLONE_SIGHAND |
+                       CLONE_THREAD | CLONE_SYSVSEM;
+  const int safe = CLONE_SETTLS | CLONE_PARENT_SETTID | CLONE_CHILD_CLEARTID |
+                   CLONE_DETACHED;
+  const BoolExpr thread_clone_ok = (flags&~safe)==required;
+#endif
 
   // The following two flags are the two important flags in any vfork-emulating
@@ -156,5 +164,9 @@
             (flags & kImportantCloneVforkFlags) == kImportantCloneVforkFlags);
 
+#if defined(__GLIBC__)
   return If(IsAndroid() ? android_test : glibc_test, Allow())
+#else
+  return If(thread_clone_ok, Allow())
+#endif
       .ElseIf(is_fork_or_clone_vfork, Error(EPERM))
       .Else(CrashSIGSYSClone());
--- a/src/3rdparty/chromium/sandbox/linux/seccomp-bpf-helpers/syscall_sets.cc
+++ b/src/3rdparty/chromium/sandbox/linux/seccomp-bpf-helpers/syscall_sets.cc
@@ -439,4 +439,7 @@
     case __NR_waitpid:
 #endif
+#if !defined(__GLIBC__)
+    case __NR_set_tid_address:
+#endif
       return true;
     case __NR_clone:  // Should be parameter-restricted.
@@ -451,5 +454,7 @@
     case __NR_set_thread_area:
 #endif
+#if defined(__GLIBC__)
     case __NR_set_tid_address:
+#endif
     case __NR_unshare:
 #if !defined(__mips__) && !defined(__aarch64__)
@@ -546,4 +551,8 @@
   switch (sysno) {
     case __NR_brk:
+#if !defined(__GLIBC__)
+    case __NR_membarrier:
+    case __NR_mremap:
+#endif
     case __NR_mlock:
     case __NR_munlock:
@@ -567,5 +576,7 @@
 #endif
     case __NR_mprotect:
+#if defined(__GLIBC__)
     case __NR_mremap:
+#endif
     case __NR_msync:
     case __NR_munlockall:
--- a/src/3rdparty/chromium/sandbox/linux/system_headers/linux_syscalls.h
+++ b/src/3rdparty/chromium/sandbox/linux/system_headers/linux_syscalls.h
@@ -11,4 +11,5 @@
 
 #include "build/build_config.h"
+#include <sys/syscall.h>
 
 #if defined(__x86_64__)
--- a/src/3rdparty/chromium/sandbox/policy/linux/bpf_renderer_policy_linux.cc
+++ b/src/3rdparty/chromium/sandbox/policy/linux/bpf_renderer_policy_linux.cc
@@ -105,4 +105,9 @@
     case __NR_sched_get_priority_max:
     case __NR_sched_get_priority_min:
+#if !defined(__GLIBC__)
+    case __NR_sched_getparam:
+    case __NR_sched_getscheduler:
+    case __NR_sched_setscheduler:
+#endif
     case __NR_sysinfo:
     case __NR_times:

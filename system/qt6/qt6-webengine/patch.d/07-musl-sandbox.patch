Patch status: limbo, not really upstreamable as-is

musl uses different syscalls than glibc and sandbox needs adjusting.
Note most issues with this can be picked up by the test suite.

Patch taken from Alpine with __GLIBC__ added.

https://crbug.com/1380656 (musl tracking bug)
--- a/src/3rdparty/chromium/sandbox/linux/seccomp-bpf-helpers/syscall_parameters_restrictions.cc
+++ b/src/3rdparty/chromium/sandbox/linux/seccomp-bpf-helpers/syscall_parameters_restrictions.cc
@@ -132,6 +132,7 @@
 ResultExpr RestrictCloneToThreadsAndEPERMFork() {
   const Arg<unsigned long> flags(0);
 
+#if defined(__GLIBC__)
   // TODO(mdempsky): Extend DSL to support (flags & ~mask1) == mask2.
   const uint64_t kAndroidCloneMask = CLONE_VM | CLONE_FS | CLONE_FILES |
                                      CLONE_SIGHAND | CLONE_THREAD |
@@ -146,6 +147,13 @@
   const BoolExpr android_test =
       AnyOf(flags == kAndroidCloneMask, flags == kObsoleteAndroidCloneMask,
             flags == kGlibcPthreadFlags);
+#else
+  const int required = CLONE_VM | CLONE_FS | CLONE_FILES | CLONE_SIGHAND |
+                       CLONE_THREAD | CLONE_SYSVSEM;
+  const int safe = CLONE_SETTLS | CLONE_PARENT_SETTID | CLONE_CHILD_CLEARTID |
+                   CLONE_DETACHED;
+  const BoolExpr thread_clone_ok = (flags&~safe)==required;
+#endif
 
   // The following two flags are the two important flags in any vfork-emulating
   // clone call. EPERM any clone call that contains both of them.
@@ -155,7 +163,11 @@
       AnyOf((flags & (CLONE_VM | CLONE_THREAD)) == 0,
             (flags & kImportantCloneVforkFlags) == kImportantCloneVforkFlags);
 
+#if defined(__GLIBC__)
   return If(IsAndroid() ? android_test : glibc_test, Allow())
+#else
+  return If(thread_clone_ok, Allow())
+#endif
       .ElseIf(is_fork_or_clone_vfork, Error(EPERM))
       .Else(CrashSIGSYSClone());
 }
--- a/src/3rdparty/chromium/sandbox/linux/seccomp-bpf-helpers/syscall_sets.cc
+++ b/src/3rdparty/chromium/sandbox/linux/seccomp-bpf-helpers/syscall_sets.cc
@@ -438,6 +438,9 @@
 #if defined(__i386__)
     case __NR_waitpid:
 #endif
+#if !defined(__GLIBC__)
+    case __NR_set_tid_address:
+#endif
       return true;
     case __NR_clone:  // Should be parameter-restricted.
     case __NR_setns:  // Privileged.
@@ -450,7 +453,9 @@
 #if defined(__i386__) || defined(__x86_64__) || defined(__mips__)
     case __NR_set_thread_area:
 #endif
+#if defined(__GLIBC__)
     case __NR_set_tid_address:
+#endif
     case __NR_unshare:
 #if !defined(__mips__) && !defined(__aarch64__)
     case __NR_vfork:
@@ -548,6 +553,10 @@
     case __NR_mlock:
     case __NR_munlock:
     case __NR_munmap:
+#if !defined(__GLIBC__)
+    case __NR_mremap:
+    case __NR_membarrier:
+#endif
       return true;
     case __NR_madvise:
     case __NR_mincore:
@@ -565,7 +574,9 @@
     case __NR_modify_ldt:
 #endif
     case __NR_mprotect:
+#if defined(__GLIBC__)
     case __NR_mremap:
+#endif
     case __NR_msync:
     case __NR_munlockall:
     case __NR_readahead:
--- a/src/3rdparty/chromium/sandbox/linux/system_headers/linux_syscalls.h
+++ b/src/3rdparty/chromium/sandbox/linux/system_headers/linux_syscalls.h
@@ -10,6 +10,7 @@
 #define SANDBOX_LINUX_SYSTEM_HEADERS_LINUX_SYSCALLS_H_
 
 #include "build/build_config.h"
+#include <sys/syscall.h>
 
 #if defined(__x86_64__)
 #include "sandbox/linux/system_headers/x86_64_linux_syscalls.h"
--- a/src/3rdparty/chromium/sandbox/policy/linux/bpf_renderer_policy_linux.cc
+++ b/src/3rdparty/chromium/sandbox/policy/linux/bpf_renderer_policy_linux.cc
@@ -104,6 +104,11 @@
     case __NR_pwrite64:
     case __NR_sched_get_priority_max:
     case __NR_sched_get_priority_min:
+#if !defined(__GLIBC__)
+    case __NR_sched_getparam:
+    case __NR_sched_getscheduler:
+    case __NR_sched_setscheduler:
+#endif
     case __NR_sysinfo:
     case __NR_times:
     case __NR_uname:
